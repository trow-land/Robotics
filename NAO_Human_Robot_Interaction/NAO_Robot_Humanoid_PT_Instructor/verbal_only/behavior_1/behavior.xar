<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="指令盒行为结束时，送出信号。" id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram>
            <Box name="Initial_Dialogue" id="4" localization="8" tooltip="Enter description here" x="374" y="202">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="Text Edit_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
              <Output name="EndOfIntro" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="70.7107">
                      <Box name="Say Text" id="8" localization="8" tooltip="Say the text received on its input." x="637" y="299">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Text Edit" id="9" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="369" y="365">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Hi, my name is Sam, I will be your personal coach today.")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Hi, my name is Sam, I will be your personal coach today.]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Speech Reco." id="10" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="1071" y="194">
                        <bitmap>media/images/box/interaction/ear.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.asr = self.session().service("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = self.session().service("ALMemory")
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self):
        from threading import Lock
        self.mutex.acquire()
        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( self.getParameter("Word list").split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(value[0]) #~ activate output of the box
        else:
            self.onNothing()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" />
                        <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" />
                        <Parameter name="Word list" inherits_from_parent="0" content_type="3" value="sure;yes;no;" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" />
                        <Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="30" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" />
                        <Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="9" />
                        <Resource name="Speech recognition" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Switch Case" id="11" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="1255" y="63">
                        <bitmap>media/images/box/interaction/choice.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("sure")):
			self.output_1(p)
		elif(p == self.typeConversion("yes")):
			self.output_2(p)
		elif(p == self.typeConversion("ok")):
			self.output_3(p)
		elif(p == self.typeConversion("okay")):
			self.output_4(p)
		elif(p == self.typeConversion("no")):
			self.output_5(p)
		elif(p == self.typeConversion("i don not")):
			self.output_6(p)
		elif(p == self.typeConversion("i don't")):
			self.output_7(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                          </content>
                        </script>
                        <pluginContent>
                          <keywords>
                            <keyword>&quot;sure&quot;</keyword>
                            <keyword>&quot;yes&quot;</keyword>
                            <keyword>&quot;ok&quot;</keyword>
                            <keyword>&quot;okay&quot;</keyword>
                            <keyword>&quot;no&quot;</keyword>
                            <keyword>&quot;i don not&quot;</keyword>
                            <keyword>&quot;i don&apos;t&quot;</keyword>
                            <keyword></keyword>
                          </keywords>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                        <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                        <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                        <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                        <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                        <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                        <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                        <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                        <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                      </Box>
                      <Box name="Text Edit (9)" id="31" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="605" y="53">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Shall we start our training now? ")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Shall we start our training now? ]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text (8)" id="16" localization="8" tooltip="Say the text received on its input." x="915" y="44">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Stand Up" id="54" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="150" y="156">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Say Text (9)" id="35" localization="8" tooltip="Say the text received on its input." x="1824" y="480">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Text Edit (10)" id="36" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="1535" y="462">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Okay bye!")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Okay bye!]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text (4)" id="20" localization="8" tooltip="Say the text received on its input." x="2444" y="476">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Say Text (1)" id="1" localization="8" tooltip="Say the text received on its input." x="1975" y="140">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Text Edit (1)" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="1686" y="122">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Okay lets start")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Okay lets start]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="3" />
                      <Link inputowner="11" indexofinput="2" outputowner="10" indexofoutput="5" />
                      <Link inputowner="16" indexofinput="2" outputowner="31" indexofoutput="3" />
                      <Link inputowner="31" indexofinput="2" outputowner="8" indexofoutput="4" />
                      <Link inputowner="10" indexofinput="2" outputowner="16" indexofoutput="4" />
                      <Link inputowner="54" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="9" indexofinput="2" outputowner="54" indexofoutput="4" />
                      <Link inputowner="35" indexofinput="2" outputowner="36" indexofoutput="3" />
                      <Link inputowner="36" indexofinput="2" outputowner="11" indexofoutput="10" />
                      <Link inputowner="36" indexofinput="2" outputowner="11" indexofoutput="9" />
                      <Link inputowner="36" indexofinput="2" outputowner="11" indexofoutput="8" />
                      <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                      <Link inputowner="0" indexofinput="3" outputowner="1" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="5" />
                      <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="6" />
                      <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="7" />
                      <Link inputowner="10" indexofinput="3" outputowner="2" indexofoutput="3" />
                      <Link inputowner="10" indexofinput="3" outputowner="36" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Squats" id="5" localization="8" tooltip="Enter description here" x="1303" y="220">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="Apply Posture_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
              <Output name="output" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="100">
                      <Box name="Apply Posture (9)" id="33" localization="8" tooltip="Set directly all the joints of the robot in the asked posture." x="698" y="116">
                        <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.applyPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Crouch" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                          <Choice value="Crouch" />
                          <Choice value="LyingBack" />
                          <Choice value="LyingBelly" />
                          <Choice value="Sit" />
                          <Choice value="SitRelax" />
                          <Choice value="StandInit" />
                          <Choice value="Stand" />
                          <Choice value="StandZero" />
                        </Parameter>
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Delay (9)" id="34" localization="8" tooltip="Wait a moment before triggering the output. &#x0A;Can be stopped anytime. &#x0A;Multiple inputs will trigger multiple outputs." x="826" y="194">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.delayed = []

    def onUnload(self):
        self.cancelDelays()

    def cancelDelays(self):
        cancel_list = list(self.delayed)
        for d in cancel_list:
            d.cancel()

    def cleanDelay(self, fut, fut_ref):
        self.delayed.remove(fut)

    def triggerOutput(self):
        self.timerOutput()

    def onInput_onStart(self):
        import qi
        import functools
        delay_future = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))
        # keep the async operation in an array for cancel
        # and remove it when it is finished in the callback
        self.delayed.append(delay_future)
        bound_clean = functools.partial(self.cleanDelay, delay_future)
        delay_future.addCallback(bound_clean)

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.delayed:
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Delay box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once delay set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently delaying at least one signal and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="Apply Posture (10)" id="35" localization="8" tooltip="Set directly all the joints of the robot in the asked posture." x="961" y="129">
                        <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.applyPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                          <Choice value="Crouch" />
                          <Choice value="LyingBack" />
                          <Choice value="LyingBelly" />
                          <Choice value="Sit" />
                          <Choice value="SitRelax" />
                          <Choice value="StandInit" />
                          <Choice value="Stand" />
                          <Choice value="StandZero" />
                        </Parameter>
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Delay (10)" id="36" localization="8" tooltip="Wait a moment before triggering the output. &#x0A;Can be stopped anytime. &#x0A;Multiple inputs will trigger multiple outputs." x="1107" y="173">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.delayed = []

    def onUnload(self):
        self.cancelDelays()

    def cancelDelays(self):
        cancel_list = list(self.delayed)
        for d in cancel_list:
            d.cancel()

    def cleanDelay(self, fut, fut_ref):
        self.delayed.remove(fut)

    def triggerOutput(self):
        self.timerOutput()

    def onInput_onStart(self):
        import qi
        import functools
        delay_future = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))
        # keep the async operation in an array for cancel
        # and remove it when it is finished in the callback
        self.delayed.append(delay_future)
        bound_clean = functools.partial(self.cleanDelay, delay_future)
        delay_future.addCallback(bound_clean)

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.delayed:
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Delay box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once delay set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently delaying at least one signal and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="Apply Posture (11)" id="37" localization="8" tooltip="Set directly all the joints of the robot in the asked posture." x="1254" y="134">
                        <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.applyPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Crouch" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                          <Choice value="Crouch" />
                          <Choice value="LyingBack" />
                          <Choice value="LyingBelly" />
                          <Choice value="Sit" />
                          <Choice value="SitRelax" />
                          <Choice value="StandInit" />
                          <Choice value="Stand" />
                          <Choice value="StandZero" />
                        </Parameter>
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Delay (11)" id="38" localization="8" tooltip="Wait a moment before triggering the output. &#x0A;Can be stopped anytime. &#x0A;Multiple inputs will trigger multiple outputs." x="1397" y="163">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.delayed = []

    def onUnload(self):
        self.cancelDelays()

    def cancelDelays(self):
        cancel_list = list(self.delayed)
        for d in cancel_list:
            d.cancel()

    def cleanDelay(self, fut, fut_ref):
        self.delayed.remove(fut)

    def triggerOutput(self):
        self.timerOutput()

    def onInput_onStart(self):
        import qi
        import functools
        delay_future = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))
        # keep the async operation in an array for cancel
        # and remove it when it is finished in the callback
        self.delayed.append(delay_future)
        bound_clean = functools.partial(self.cleanDelay, delay_future)
        delay_future.addCallback(bound_clean)

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.delayed:
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Delay box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once delay set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently delaying at least one signal and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="Apply Posture (12)" id="39" localization="8" tooltip="Set directly all the joints of the robot in the asked posture." x="1532" y="98">
                        <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.applyPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                          <Choice value="Crouch" />
                          <Choice value="LyingBack" />
                          <Choice value="LyingBelly" />
                          <Choice value="Sit" />
                          <Choice value="SitRelax" />
                          <Choice value="StandInit" />
                          <Choice value="Stand" />
                          <Choice value="StandZero" />
                        </Parameter>
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Text Edit" id="6" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="157" y="412">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("The last pose is squats")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[The last pose is squats]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text" id="20" localization="8" tooltip="Say the text received on its input." x="462" y="476">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="78" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="81" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Text Edit (1)" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="627" y="406">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Follow me.\nReady. Steady. Go!")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Follow me.
Ready. Steady. Go!]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text (1)" id="3" localization="8" tooltip="Say the text received on its input." x="914" y="392">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="34" indexofinput="2" outputowner="33" indexofoutput="4" />
                      <Link inputowner="35" indexofinput="2" outputowner="34" indexofoutput="4" />
                      <Link inputowner="36" indexofinput="2" outputowner="35" indexofoutput="4" />
                      <Link inputowner="38" indexofinput="2" outputowner="37" indexofoutput="4" />
                      <Link inputowner="39" indexofinput="2" outputowner="38" indexofoutput="4" />
                      <Link inputowner="37" indexofinput="2" outputowner="36" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="3" outputowner="39" indexofoutput="4" />
                      <Link inputowner="20" indexofinput="2" outputowner="6" indexofoutput="3" />
                      <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                      <Link inputowner="2" indexofinput="2" outputowner="20" indexofoutput="4" />
                      <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="33" indexofinput="2" outputowner="3" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Lat Raises" id="6" localization="8" tooltip="Enter description here" x="1063" y="234">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="input" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
              <Output name="AnimatedSay_onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="84.0896">
                      <Box name="Stand Up" id="3" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="937" y="618">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Timeline" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1067" y="511">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="200" size="200">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Lateral Raises" id="1" localization="8" tooltip="Set directly all the joints of the robot in the asked posture." x="438" y="259">
                                  <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.applyPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="LateralRaises" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="20" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-24.4145" />
                              <Key frame="98" value="-24.5265" />
                              <Key frame="200" value="-25.6105" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-68.7512" />
                              <Key frame="98" value="-68.7917" />
                              <Key frame="200" value="-69.3817" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.296292" />
                              <Key frame="98" value="0.293013" />
                              <Key frame="200" value="0.293013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="82.3767" />
                              <Key frame="98" value="81.8016" />
                              <Key frame="200" value="76.3742" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="12.3654" />
                              <Key frame="98" value="75.5205" />
                              <Key frame="200" value="-6.24787" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="5.92196" />
                              <Key frame="98" value="5.73789" />
                              <Key frame="200" value="6.0465" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="24.4145" />
                              <Key frame="98" value="24.5303" />
                              <Key frame="200" value="26.1756" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="68.7512" />
                              <Key frame="98" value="68.7958" />
                              <Key frame="200" value="69.363" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.296292" />
                              <Key frame="98" value="0.293013" />
                              <Key frame="200" value="0.293013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="82.3767" />
                              <Key frame="98" value="82.0576" />
                              <Key frame="200" value="76.3982" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-12.3654" />
                              <Key frame="98" value="-75.5205" />
                              <Key frame="200" value="6.24225" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="5.70849" />
                              <Key frame="98" value="5.45315" />
                              <Key frame="200" value="5.60068" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (1)" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1201" y="619">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="200" size="200">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Lateral Raises" id="1" localization="8" tooltip="Set directly all the joints of the robot in the asked posture." x="438" y="259">
                                  <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.applyPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="LateralRaises" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="20" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-24.4145" />
                              <Key frame="98" value="-24.5265" />
                              <Key frame="200" value="-25.6105" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-68.7512" />
                              <Key frame="98" value="-68.7917" />
                              <Key frame="200" value="-69.3817" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.296292" />
                              <Key frame="98" value="0.293013" />
                              <Key frame="200" value="0.293013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="82.3767" />
                              <Key frame="98" value="81.8016" />
                              <Key frame="200" value="76.3742" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="12.3654" />
                              <Key frame="98" value="75.5205" />
                              <Key frame="200" value="-6.24787" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="5.92196" />
                              <Key frame="98" value="5.73789" />
                              <Key frame="200" value="6.0465" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="24.4145" />
                              <Key frame="98" value="24.5303" />
                              <Key frame="200" value="26.1756" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="68.7512" />
                              <Key frame="98" value="68.7958" />
                              <Key frame="200" value="69.363" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.296292" />
                              <Key frame="98" value="0.293013" />
                              <Key frame="200" value="0.293013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="82.3767" />
                              <Key frame="98" value="82.0576" />
                              <Key frame="200" value="76.3982" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-12.3654" />
                              <Key frame="98" value="-75.5205" />
                              <Key frame="200" value="6.24225" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="5.70849" />
                              <Key frame="98" value="5.45315" />
                              <Key frame="200" value="5.60068" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (2)" id="6" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1301" y="504">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="200" size="200">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Lateral Raises" id="1" localization="8" tooltip="Set directly all the joints of the robot in the asked posture." x="438" y="259">
                                  <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.applyPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="LateralRaises" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="20" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-24.4145" />
                              <Key frame="98" value="-24.5265" />
                              <Key frame="200" value="-25.6105" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-68.7512" />
                              <Key frame="98" value="-68.7917" />
                              <Key frame="200" value="-69.3817" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.296292" />
                              <Key frame="98" value="0.293013" />
                              <Key frame="200" value="0.293013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="82.3767" />
                              <Key frame="98" value="81.8016" />
                              <Key frame="200" value="76.3742" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="12.3654" />
                              <Key frame="98" value="75.5205" />
                              <Key frame="200" value="-6.24787" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="5.92196" />
                              <Key frame="98" value="5.73789" />
                              <Key frame="200" value="6.0465" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="24.4145" />
                              <Key frame="98" value="24.5303" />
                              <Key frame="200" value="26.1756" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="68.7512" />
                              <Key frame="98" value="68.7958" />
                              <Key frame="200" value="69.363" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.296292" />
                              <Key frame="98" value="0.293013" />
                              <Key frame="200" value="0.293013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="82.3767" />
                              <Key frame="98" value="82.0576" />
                              <Key frame="200" value="76.3982" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-12.3654" />
                              <Key frame="98" value="-75.5205" />
                              <Key frame="200" value="6.24225" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="5.70849" />
                              <Key frame="98" value="5.45315" />
                              <Key frame="200" value="5.60068" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (3)" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1392" y="629">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="200" size="200">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Lateral Raises" id="1" localization="8" tooltip="Set directly all the joints of the robot in the asked posture." x="438" y="259">
                                  <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.applyPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="LateralRaises" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="20" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-24.4145" />
                              <Key frame="98" value="-24.5265" />
                              <Key frame="200" value="-25.6105" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-68.7512" />
                              <Key frame="98" value="-68.7917" />
                              <Key frame="200" value="-69.3817" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.296292" />
                              <Key frame="98" value="0.293013" />
                              <Key frame="200" value="0.293013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="82.3767" />
                              <Key frame="98" value="81.8016" />
                              <Key frame="200" value="76.3742" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="12.3654" />
                              <Key frame="98" value="75.5205" />
                              <Key frame="200" value="-6.24787" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="5.92196" />
                              <Key frame="98" value="5.73789" />
                              <Key frame="200" value="6.0465" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="24.4145" />
                              <Key frame="98" value="24.5303" />
                              <Key frame="200" value="26.1756" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="68.7512" />
                              <Key frame="98" value="68.7958" />
                              <Key frame="200" value="69.363" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.296292" />
                              <Key frame="98" value="0.293013" />
                              <Key frame="200" value="0.293013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="82.3767" />
                              <Key frame="98" value="82.0576" />
                              <Key frame="200" value="76.3982" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-12.3654" />
                              <Key frame="98" value="-75.5205" />
                              <Key frame="200" value="6.24225" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="5.70849" />
                              <Key frame="98" value="5.45315" />
                              <Key frame="200" value="5.60068" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (4)" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1488" y="516">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="200" size="200">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Lateral Raises" id="1" localization="8" tooltip="Set directly all the joints of the robot in the asked posture." x="438" y="259">
                                  <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.applyPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="LateralRaises" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="20" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-24.4145" />
                              <Key frame="98" value="-24.5265" />
                              <Key frame="200" value="-25.6105" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-68.7512" />
                              <Key frame="98" value="-68.7917" />
                              <Key frame="200" value="-69.3817" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.296292" />
                              <Key frame="98" value="0.293013" />
                              <Key frame="200" value="0.293013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="82.3767" />
                              <Key frame="98" value="81.8016" />
                              <Key frame="200" value="76.3742" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="12.3654" />
                              <Key frame="98" value="75.5205" />
                              <Key frame="200" value="-6.24787" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="5.92196" />
                              <Key frame="98" value="5.73789" />
                              <Key frame="200" value="6.0465" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="24.4145" />
                              <Key frame="98" value="24.5303" />
                              <Key frame="200" value="26.1756" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="68.7512" />
                              <Key frame="98" value="68.7958" />
                              <Key frame="200" value="69.363" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.296292" />
                              <Key frame="98" value="0.293013" />
                              <Key frame="200" value="0.293013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="82.3767" />
                              <Key frame="98" value="82.0576" />
                              <Key frame="200" value="76.3982" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-12.3654" />
                              <Key frame="98" value="-75.5205" />
                              <Key frame="200" value="6.24225" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="5.70849" />
                              <Key frame="98" value="5.45315" />
                              <Key frame="200" value="5.60068" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (5)" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1585" y="641">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="200" size="200">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Lateral Raises" id="1" localization="8" tooltip="Set directly all the joints of the robot in the asked posture." x="438" y="259">
                                  <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.applyPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="LateralRaises" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="20" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-24.4145" />
                              <Key frame="98" value="-24.5265" />
                              <Key frame="200" value="-25.6105" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-68.7512" />
                              <Key frame="98" value="-68.7917" />
                              <Key frame="200" value="-69.3817" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.296292" />
                              <Key frame="98" value="0.293013" />
                              <Key frame="200" value="0.293013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="82.3767" />
                              <Key frame="98" value="81.8016" />
                              <Key frame="200" value="76.3742" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="12.3654" />
                              <Key frame="98" value="75.5205" />
                              <Key frame="200" value="-6.24787" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="5.92196" />
                              <Key frame="98" value="5.73789" />
                              <Key frame="200" value="6.0465" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="24.4145" />
                              <Key frame="98" value="24.5303" />
                              <Key frame="200" value="26.1756" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="68.7512" />
                              <Key frame="98" value="68.7958" />
                              <Key frame="200" value="69.363" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.296292" />
                              <Key frame="98" value="0.293013" />
                              <Key frame="200" value="0.293013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="0" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="82.3767" />
                              <Key frame="98" value="82.0576" />
                              <Key frame="200" value="76.3982" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-12.3654" />
                              <Key frame="98" value="-75.5205" />
                              <Key frame="200" value="6.24225" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="5.70849" />
                              <Key frame="98" value="5.45315" />
                              <Key frame="200" value="5.60068" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Text Edit" id="1" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="397" y="257">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("The last pose is arm tweist")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[The last pose is arm tweist]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text" id="20" localization="8" tooltip="Say the text received on its input." x="702" y="321">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="78" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="81" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Text Edit (1)" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="867" y="251">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Follow me.\nReady. Steady. Go!")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Follow me.
Ready. Steady. Go!]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text (1)" id="9" localization="8" tooltip="Say the text received on its input." x="1154" y="237">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="4" />
                      <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="4" />
                      <Link inputowner="11" indexofinput="2" outputowner="8" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="4" />
                      <Link inputowner="20" indexofinput="2" outputowner="1" indexofoutput="3" />
                      <Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="3" />
                      <Link inputowner="2" indexofinput="2" outputowner="20" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="3" indexofinput="2" outputowner="9" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Arm Twists" id="7" localization="8" tooltip="Enter description here" x="540" y="215">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="Green_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
              <Output name="Timeline5_onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Timeline (1)" id="15" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="899" y="319">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="150">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="1" value="-11.1647" />
                              <Key frame="50" value="-11.1647" />
                              <Key frame="100" value="-11.1647" />
                              <Key frame="150" value="-11.1647" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="1" value="0.173378" />
                              <Key frame="50" value="0.173378" />
                              <Key frame="100" value="0.173378" />
                              <Key frame="150" value="0.173378" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="1" value="-4.13332" />
                              <Key frame="50" value="-4.13332" />
                              <Key frame="100" value="-4.13332" />
                              <Key frame="150" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="1" value="-8.78677" />
                              <Key frame="50" value="-8.78677" />
                              <Key frame="100" value="-8.78677" />
                              <Key frame="150" value="-8.78677" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-33.3965" />
                              <Key frame="50" value="-33.3965" />
                              <Key frame="100" value="-33.3965" />
                              <Key frame="150" value="-32.166" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-99.6716" />
                              <Key frame="50" value="-99.6716" />
                              <Key frame="100" value="-99.6716" />
                              <Key frame="150" value="-99.0564" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.9636" />
                              <Key frame="50" value="0.9636" />
                              <Key frame="100" value="0.9636" />
                              <Key frame="150" value="0.9636" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="1" value="3.07861" />
                              <Key frame="50" value="3.07861" />
                              <Key frame="100" value="3.07861" />
                              <Key frame="150" value="3.07861" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="1" value="9.14314" />
                              <Key frame="50" value="9.14314" />
                              <Key frame="100" value="9.14314" />
                              <Key frame="150" value="9.14314" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="1" value="-10.3688" />
                              <Key frame="50" value="-10.3688" />
                              <Key frame="100" value="-10.3688" />
                              <Key frame="150" value="-10.3688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="1" value="9.31412" />
                              <Key frame="50" value="9.31412" />
                              <Key frame="100" value="9.31412" />
                              <Key frame="150" value="9.31412" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="67.5863" />
                              <Key frame="50" value="67.5863" />
                              <Key frame="100" value="67.5863" />
                              <Key frame="150" value="66.3559" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="73.2114" />
                              <Key frame="50" value="73.2114" />
                              <Key frame="100" value="73.2114" />
                              <Key frame="150" value="70.311" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="13.9724" />
                              <Key frame="50" value="-103.363" />
                              <Key frame="100" value="104.5" />
                              <Key frame="150" value="103.182" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="1" value="-7.02893" />
                              <Key frame="50" value="-7.02893" />
                              <Key frame="100" value="-7.02893" />
                              <Key frame="150" value="-7.02893" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="1" value="-3.86484" />
                              <Key frame="50" value="-3.86484" />
                              <Key frame="100" value="-3.86484" />
                              <Key frame="150" value="-3.86484" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="33.4892" />
                              <Key frame="50" value="33.4892" />
                              <Key frame="100" value="33.4892" />
                              <Key frame="150" value="32.2587" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="100.282" />
                              <Key frame="50" value="100.282" />
                              <Key frame="100" value="100.282" />
                              <Key frame="150" value="100.282" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.9816" />
                              <Key frame="50" value="0.9816" />
                              <Key frame="100" value="0.9816" />
                              <Key frame="150" value="0.9816" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="1" value="3.42537" />
                              <Key frame="50" value="3.42537" />
                              <Key frame="100" value="3.42537" />
                              <Key frame="150" value="3.42537" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="1" value="6.85796" />
                              <Key frame="50" value="6.85796" />
                              <Key frame="100" value="6.85796" />
                              <Key frame="150" value="6.85796" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="1" value="-10.3688" />
                              <Key frame="50" value="-10.3688" />
                              <Key frame="100" value="-10.3688" />
                              <Key frame="150" value="-10.3688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="1" value="12.3073" />
                              <Key frame="50" value="12.3073" />
                              <Key frame="100" value="12.3073" />
                              <Key frame="150" value="12.3073" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="67.2396" />
                              <Key frame="50" value="67.2396" />
                              <Key frame="100" value="67.2396" />
                              <Key frame="150" value="65.8333" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-72.8646" />
                              <Key frame="50" value="-72.8646" />
                              <Key frame="100" value="-72.8646" />
                              <Key frame="150" value="-69.9642" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-14.4166" />
                              <Key frame="50" value="102.919" />
                              <Key frame="100" value="-104.5" />
                              <Key frame="150" value="-103.275" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (2)" id="16" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1062" y="322">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="150">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="1" value="-11.1647" />
                              <Key frame="50" value="-11.1647" />
                              <Key frame="100" value="-11.1647" />
                              <Key frame="150" value="-11.1647" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="1" value="0.173378" />
                              <Key frame="50" value="0.173378" />
                              <Key frame="100" value="0.173378" />
                              <Key frame="150" value="0.173378" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="1" value="-4.13332" />
                              <Key frame="50" value="-4.13332" />
                              <Key frame="100" value="-4.13332" />
                              <Key frame="150" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="1" value="-8.78677" />
                              <Key frame="50" value="-8.78677" />
                              <Key frame="100" value="-8.78677" />
                              <Key frame="150" value="-8.78677" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-33.3965" />
                              <Key frame="50" value="-33.3965" />
                              <Key frame="100" value="-33.3965" />
                              <Key frame="150" value="-32.166" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-99.6716" />
                              <Key frame="50" value="-99.6716" />
                              <Key frame="100" value="-99.6716" />
                              <Key frame="150" value="-99.0564" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.9636" />
                              <Key frame="50" value="0.9636" />
                              <Key frame="100" value="0.9636" />
                              <Key frame="150" value="0.9636" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="1" value="3.07861" />
                              <Key frame="50" value="3.07861" />
                              <Key frame="100" value="3.07861" />
                              <Key frame="150" value="3.07861" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="1" value="9.14314" />
                              <Key frame="50" value="9.14314" />
                              <Key frame="100" value="9.14314" />
                              <Key frame="150" value="9.14314" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="1" value="-10.3688" />
                              <Key frame="50" value="-10.3688" />
                              <Key frame="100" value="-10.3688" />
                              <Key frame="150" value="-10.3688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="1" value="9.31412" />
                              <Key frame="50" value="9.31412" />
                              <Key frame="100" value="9.31412" />
                              <Key frame="150" value="9.31412" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="67.5863" />
                              <Key frame="50" value="67.5863" />
                              <Key frame="100" value="67.5863" />
                              <Key frame="150" value="66.3559" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="73.2114" />
                              <Key frame="50" value="73.2114" />
                              <Key frame="100" value="73.2114" />
                              <Key frame="150" value="70.311" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="13.9724" />
                              <Key frame="50" value="-103.363" />
                              <Key frame="100" value="104.5" />
                              <Key frame="150" value="103.182" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="1" value="-7.02893" />
                              <Key frame="50" value="-7.02893" />
                              <Key frame="100" value="-7.02893" />
                              <Key frame="150" value="-7.02893" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="1" value="-3.86484" />
                              <Key frame="50" value="-3.86484" />
                              <Key frame="100" value="-3.86484" />
                              <Key frame="150" value="-3.86484" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="33.4892" />
                              <Key frame="50" value="33.4892" />
                              <Key frame="100" value="33.4892" />
                              <Key frame="150" value="32.2587" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="100.282" />
                              <Key frame="50" value="100.282" />
                              <Key frame="100" value="100.282" />
                              <Key frame="150" value="100.282" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.9816" />
                              <Key frame="50" value="0.9816" />
                              <Key frame="100" value="0.9816" />
                              <Key frame="150" value="0.9816" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="1" value="3.42537" />
                              <Key frame="50" value="3.42537" />
                              <Key frame="100" value="3.42537" />
                              <Key frame="150" value="3.42537" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="1" value="6.85796" />
                              <Key frame="50" value="6.85796" />
                              <Key frame="100" value="6.85796" />
                              <Key frame="150" value="6.85796" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="1" value="-10.3688" />
                              <Key frame="50" value="-10.3688" />
                              <Key frame="100" value="-10.3688" />
                              <Key frame="150" value="-10.3688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="1" value="12.3073" />
                              <Key frame="50" value="12.3073" />
                              <Key frame="100" value="12.3073" />
                              <Key frame="150" value="12.3073" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="67.2396" />
                              <Key frame="50" value="67.2396" />
                              <Key frame="100" value="67.2396" />
                              <Key frame="150" value="65.8333" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-72.8646" />
                              <Key frame="50" value="-72.8646" />
                              <Key frame="100" value="-72.8646" />
                              <Key frame="150" value="-69.9642" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-14.4166" />
                              <Key frame="50" value="102.919" />
                              <Key frame="100" value="-104.5" />
                              <Key frame="150" value="-103.275" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (3)" id="17" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1275" y="320">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="150">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="1" value="-11.1647" />
                              <Key frame="50" value="-11.1647" />
                              <Key frame="100" value="-11.1647" />
                              <Key frame="150" value="-11.1647" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="1" value="0.173378" />
                              <Key frame="50" value="0.173378" />
                              <Key frame="100" value="0.173378" />
                              <Key frame="150" value="0.173378" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="1" value="-4.13332" />
                              <Key frame="50" value="-4.13332" />
                              <Key frame="100" value="-4.13332" />
                              <Key frame="150" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="1" value="-8.78677" />
                              <Key frame="50" value="-8.78677" />
                              <Key frame="100" value="-8.78677" />
                              <Key frame="150" value="-8.78677" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-33.3965" />
                              <Key frame="50" value="-33.3965" />
                              <Key frame="100" value="-33.3965" />
                              <Key frame="150" value="-32.166" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-99.6716" />
                              <Key frame="50" value="-99.6716" />
                              <Key frame="100" value="-99.6716" />
                              <Key frame="150" value="-99.0564" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.9636" />
                              <Key frame="50" value="0.9636" />
                              <Key frame="100" value="0.9636" />
                              <Key frame="150" value="0.9636" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="1" value="3.07861" />
                              <Key frame="50" value="3.07861" />
                              <Key frame="100" value="3.07861" />
                              <Key frame="150" value="3.07861" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="1" value="9.14314" />
                              <Key frame="50" value="9.14314" />
                              <Key frame="100" value="9.14314" />
                              <Key frame="150" value="9.14314" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="1" value="-10.3688" />
                              <Key frame="50" value="-10.3688" />
                              <Key frame="100" value="-10.3688" />
                              <Key frame="150" value="-10.3688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="1" value="9.31412" />
                              <Key frame="50" value="9.31412" />
                              <Key frame="100" value="9.31412" />
                              <Key frame="150" value="9.31412" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="67.5863" />
                              <Key frame="50" value="67.5863" />
                              <Key frame="100" value="67.5863" />
                              <Key frame="150" value="66.3559" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="73.2114" />
                              <Key frame="50" value="73.2114" />
                              <Key frame="100" value="73.2114" />
                              <Key frame="150" value="70.311" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="13.9724" />
                              <Key frame="50" value="-103.363" />
                              <Key frame="100" value="104.5" />
                              <Key frame="150" value="103.182" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="1" value="-7.02893" />
                              <Key frame="50" value="-7.02893" />
                              <Key frame="100" value="-7.02893" />
                              <Key frame="150" value="-7.02893" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="1" value="-3.86484" />
                              <Key frame="50" value="-3.86484" />
                              <Key frame="100" value="-3.86484" />
                              <Key frame="150" value="-3.86484" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="33.4892" />
                              <Key frame="50" value="33.4892" />
                              <Key frame="100" value="33.4892" />
                              <Key frame="150" value="32.2587" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="100.282" />
                              <Key frame="50" value="100.282" />
                              <Key frame="100" value="100.282" />
                              <Key frame="150" value="100.282" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.9816" />
                              <Key frame="50" value="0.9816" />
                              <Key frame="100" value="0.9816" />
                              <Key frame="150" value="0.9816" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="1" value="3.42537" />
                              <Key frame="50" value="3.42537" />
                              <Key frame="100" value="3.42537" />
                              <Key frame="150" value="3.42537" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="1" value="6.85796" />
                              <Key frame="50" value="6.85796" />
                              <Key frame="100" value="6.85796" />
                              <Key frame="150" value="6.85796" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="1" value="-10.3688" />
                              <Key frame="50" value="-10.3688" />
                              <Key frame="100" value="-10.3688" />
                              <Key frame="150" value="-10.3688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="1" value="12.3073" />
                              <Key frame="50" value="12.3073" />
                              <Key frame="100" value="12.3073" />
                              <Key frame="150" value="12.3073" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="67.2396" />
                              <Key frame="50" value="67.2396" />
                              <Key frame="100" value="67.2396" />
                              <Key frame="150" value="65.8333" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-72.8646" />
                              <Key frame="50" value="-72.8646" />
                              <Key frame="100" value="-72.8646" />
                              <Key frame="150" value="-69.9642" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-14.4166" />
                              <Key frame="50" value="102.919" />
                              <Key frame="100" value="-104.5" />
                              <Key frame="150" value="-103.275" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (4)" id="18" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1484" y="322">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="150">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="1" value="-11.1647" />
                              <Key frame="50" value="-11.1647" />
                              <Key frame="100" value="-11.1647" />
                              <Key frame="150" value="-11.1647" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="1" value="0.173378" />
                              <Key frame="50" value="0.173378" />
                              <Key frame="100" value="0.173378" />
                              <Key frame="150" value="0.173378" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="1" value="-4.13332" />
                              <Key frame="50" value="-4.13332" />
                              <Key frame="100" value="-4.13332" />
                              <Key frame="150" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="1" value="-8.78677" />
                              <Key frame="50" value="-8.78677" />
                              <Key frame="100" value="-8.78677" />
                              <Key frame="150" value="-8.78677" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-33.3965" />
                              <Key frame="50" value="-33.3965" />
                              <Key frame="100" value="-33.3965" />
                              <Key frame="150" value="-32.166" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-99.6716" />
                              <Key frame="50" value="-99.6716" />
                              <Key frame="100" value="-99.6716" />
                              <Key frame="150" value="-99.0564" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.9636" />
                              <Key frame="50" value="0.9636" />
                              <Key frame="100" value="0.9636" />
                              <Key frame="150" value="0.9636" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="1" value="3.07861" />
                              <Key frame="50" value="3.07861" />
                              <Key frame="100" value="3.07861" />
                              <Key frame="150" value="3.07861" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="1" value="9.14314" />
                              <Key frame="50" value="9.14314" />
                              <Key frame="100" value="9.14314" />
                              <Key frame="150" value="9.14314" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="1" value="-10.3688" />
                              <Key frame="50" value="-10.3688" />
                              <Key frame="100" value="-10.3688" />
                              <Key frame="150" value="-10.3688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="1" value="9.31412" />
                              <Key frame="50" value="9.31412" />
                              <Key frame="100" value="9.31412" />
                              <Key frame="150" value="9.31412" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="67.5863" />
                              <Key frame="50" value="67.5863" />
                              <Key frame="100" value="67.5863" />
                              <Key frame="150" value="66.3559" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="73.2114" />
                              <Key frame="50" value="73.2114" />
                              <Key frame="100" value="73.2114" />
                              <Key frame="150" value="70.311" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="13.9724" />
                              <Key frame="50" value="-103.363" />
                              <Key frame="100" value="104.5" />
                              <Key frame="150" value="103.182" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="1" value="-7.02893" />
                              <Key frame="50" value="-7.02893" />
                              <Key frame="100" value="-7.02893" />
                              <Key frame="150" value="-7.02893" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="1" value="-3.86484" />
                              <Key frame="50" value="-3.86484" />
                              <Key frame="100" value="-3.86484" />
                              <Key frame="150" value="-3.86484" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="33.4892" />
                              <Key frame="50" value="33.4892" />
                              <Key frame="100" value="33.4892" />
                              <Key frame="150" value="32.2587" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="100.282" />
                              <Key frame="50" value="100.282" />
                              <Key frame="100" value="100.282" />
                              <Key frame="150" value="100.282" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.9816" />
                              <Key frame="50" value="0.9816" />
                              <Key frame="100" value="0.9816" />
                              <Key frame="150" value="0.9816" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="1" value="3.42537" />
                              <Key frame="50" value="3.42537" />
                              <Key frame="100" value="3.42537" />
                              <Key frame="150" value="3.42537" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="1" value="6.85796" />
                              <Key frame="50" value="6.85796" />
                              <Key frame="100" value="6.85796" />
                              <Key frame="150" value="6.85796" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="1" value="-10.3688" />
                              <Key frame="50" value="-10.3688" />
                              <Key frame="100" value="-10.3688" />
                              <Key frame="150" value="-10.3688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="1" value="12.3073" />
                              <Key frame="50" value="12.3073" />
                              <Key frame="100" value="12.3073" />
                              <Key frame="150" value="12.3073" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="67.2396" />
                              <Key frame="50" value="67.2396" />
                              <Key frame="100" value="67.2396" />
                              <Key frame="150" value="65.8333" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-72.8646" />
                              <Key frame="50" value="-72.8646" />
                              <Key frame="100" value="-72.8646" />
                              <Key frame="150" value="-69.9642" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-14.4166" />
                              <Key frame="50" value="102.919" />
                              <Key frame="100" value="-104.5" />
                              <Key frame="150" value="-103.275" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (5)" id="19" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1671" y="309">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="150">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="1" value="-11.1647" />
                              <Key frame="50" value="-11.1647" />
                              <Key frame="100" value="-11.1647" />
                              <Key frame="150" value="-11.1647" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="1" value="0.173378" />
                              <Key frame="50" value="0.173378" />
                              <Key frame="100" value="0.173378" />
                              <Key frame="150" value="0.173378" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="1" value="-4.13332" />
                              <Key frame="50" value="-4.13332" />
                              <Key frame="100" value="-4.13332" />
                              <Key frame="150" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="1" value="-8.78677" />
                              <Key frame="50" value="-8.78677" />
                              <Key frame="100" value="-8.78677" />
                              <Key frame="150" value="-8.78677" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-33.3965" />
                              <Key frame="50" value="-33.3965" />
                              <Key frame="100" value="-33.3965" />
                              <Key frame="150" value="-32.166" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-99.6716" />
                              <Key frame="50" value="-99.6716" />
                              <Key frame="100" value="-99.6716" />
                              <Key frame="150" value="-99.0564" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.9636" />
                              <Key frame="50" value="0.9636" />
                              <Key frame="100" value="0.9636" />
                              <Key frame="150" value="0.9636" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="1" value="3.07861" />
                              <Key frame="50" value="3.07861" />
                              <Key frame="100" value="3.07861" />
                              <Key frame="150" value="3.07861" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="1" value="9.14314" />
                              <Key frame="50" value="9.14314" />
                              <Key frame="100" value="9.14314" />
                              <Key frame="150" value="9.14314" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="1" value="-10.3688" />
                              <Key frame="50" value="-10.3688" />
                              <Key frame="100" value="-10.3688" />
                              <Key frame="150" value="-10.3688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="1" value="9.31412" />
                              <Key frame="50" value="9.31412" />
                              <Key frame="100" value="9.31412" />
                              <Key frame="150" value="9.31412" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="67.5863" />
                              <Key frame="50" value="67.5863" />
                              <Key frame="100" value="67.5863" />
                              <Key frame="150" value="66.3559" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="73.2114" />
                              <Key frame="50" value="73.2114" />
                              <Key frame="100" value="73.2114" />
                              <Key frame="150" value="70.311" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="13.9724" />
                              <Key frame="50" value="-103.363" />
                              <Key frame="100" value="104.5" />
                              <Key frame="150" value="103.182" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="1" value="-7.02893" />
                              <Key frame="50" value="-7.02893" />
                              <Key frame="100" value="-7.02893" />
                              <Key frame="150" value="-7.02893" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="1" value="-3.86484" />
                              <Key frame="50" value="-3.86484" />
                              <Key frame="100" value="-3.86484" />
                              <Key frame="150" value="-3.86484" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="33.4892" />
                              <Key frame="50" value="33.4892" />
                              <Key frame="100" value="33.4892" />
                              <Key frame="150" value="32.2587" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="100.282" />
                              <Key frame="50" value="100.282" />
                              <Key frame="100" value="100.282" />
                              <Key frame="150" value="100.282" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.9816" />
                              <Key frame="50" value="0.9816" />
                              <Key frame="100" value="0.9816" />
                              <Key frame="150" value="0.9816" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="1" value="3.42537" />
                              <Key frame="50" value="3.42537" />
                              <Key frame="100" value="3.42537" />
                              <Key frame="150" value="3.42537" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="1" value="6.85796" />
                              <Key frame="50" value="6.85796" />
                              <Key frame="100" value="6.85796" />
                              <Key frame="150" value="6.85796" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="1" value="-10.3688" />
                              <Key frame="50" value="-10.3688" />
                              <Key frame="100" value="-10.3688" />
                              <Key frame="150" value="-10.3688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="1" value="12.3073" />
                              <Key frame="50" value="12.3073" />
                              <Key frame="100" value="12.3073" />
                              <Key frame="150" value="12.3073" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="67.2396" />
                              <Key frame="50" value="67.2396" />
                              <Key frame="100" value="67.2396" />
                              <Key frame="150" value="65.8333" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-72.8646" />
                              <Key frame="50" value="-72.8646" />
                              <Key frame="100" value="-72.8646" />
                              <Key frame="150" value="-69.9642" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-14.4166" />
                              <Key frame="50" value="102.919" />
                              <Key frame="100" value="-104.5" />
                              <Key frame="150" value="-103.275" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Text Edit (6)" id="6" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="217" y="659">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("The first pose is arm tweist")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[The first pose is arm tweist]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text (5)" id="20" localization="8" tooltip="Say the text received on its input." x="522" y="723">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="78" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="81" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Text Edit (7)" id="30" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="687" y="653">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Follow me.\nReady. Steady. Go!")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Follow me.
Ready. Steady. Go!]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text (6)" id="31" localization="8" tooltip="Say the text received on its input." x="974" y="639">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="16" indexofinput="2" outputowner="15" indexofoutput="4" />
                      <Link inputowner="17" indexofinput="2" outputowner="16" indexofoutput="4" />
                      <Link inputowner="18" indexofinput="2" outputowner="17" indexofoutput="4" />
                      <Link inputowner="19" indexofinput="2" outputowner="18" indexofoutput="4" />
                      <Link inputowner="20" indexofinput="2" outputowner="6" indexofoutput="3" />
                      <Link inputowner="31" indexofinput="2" outputowner="30" indexofoutput="3" />
                      <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="30" indexofinput="2" outputowner="20" indexofoutput="4" />
                      <Link inputowner="15" indexofinput="2" outputowner="31" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="3" outputowner="19" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Arm Circles" id="8" localization="8" tooltip="Enter description here" x="732" y="223">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="Green_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
              <Output name="Timeline5_onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="84.0896">
                      <Box name="Timeline (1)" id="52" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="947" y="431">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="190">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-7.3805" />
                              <Key frame="27" value="-26.3651" />
                              <Key frame="40" value="-21.0916" />
                              <Key frame="52" value="-9.92936" />
                              <Key frame="65" value="-8.17153" />
                              <Key frame="77" value="-10.7204" />
                              <Key frame="90" value="-7.73207" />
                              <Key frame="102" value="-7.64417" />
                              <Key frame="115" value="-7.3805" />
                              <Key frame="127" value="-4.48007" />
                              <Key frame="140" value="-5.62267" />
                              <Key frame="152" value="-8.87466" />
                              <Key frame="165" value="-4.65585" />
                              <Key frame="177" value="-3.86484" />
                              <Key frame="190" value="-2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-45.0909" />
                              <Key frame="27" value="-57.5715" />
                              <Key frame="40" value="-53.2648" />
                              <Key frame="52" value="-51.1554" />
                              <Key frame="65" value="-58.6262" />
                              <Key frame="77" value="-61.2629" />
                              <Key frame="90" value="-60.9114" />
                              <Key frame="102" value="-55.9894" />
                              <Key frame="115" value="-45.0909" />
                              <Key frame="127" value="-46.6729" />
                              <Key frame="140" value="-60.9993" />
                              <Key frame="152" value="-62.5813" />
                              <Key frame="165" value="-62.6692" />
                              <Key frame="177" value="-57.9231" />
                              <Key frame="190" value="-38.0595" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.316" />
                              <Key frame="27" value="0.316" />
                              <Key frame="40" value="0.316" />
                              <Key frame="52" value="0.316" />
                              <Key frame="65" value="0.316" />
                              <Key frame="77" value="0.316" />
                              <Key frame="90" value="0.316" />
                              <Key frame="102" value="0.316" />
                              <Key frame="115" value="0.316" />
                              <Key frame="127" value="0.316" />
                              <Key frame="140" value="0.316" />
                              <Key frame="152" value="0.316" />
                              <Key frame="165" value="0.316" />
                              <Key frame="177" value="0.316" />
                              <Key frame="190" value="0.316" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="33.6601" />
                              <Key frame="27" value="41.8341" />
                              <Key frame="40" value="47.0197" />
                              <Key frame="52" value="64.8617" />
                              <Key frame="65" value="72.6841" />
                              <Key frame="77" value="58.094" />
                              <Key frame="90" value="29.1777" />
                              <Key frame="102" value="19.3338" />
                              <Key frame="115" value="33.6601" />
                              <Key frame="127" value="61.6097" />
                              <Key frame="140" value="79.9791" />
                              <Key frame="152" value="60.9066" />
                              <Key frame="165" value="29.3534" />
                              <Key frame="177" value="14.2361" />
                              <Key frame="190" value="23.2889" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="58.1819" />
                              <Key frame="27" value="58.9729" />
                              <Key frame="40" value="67.7621" />
                              <Key frame="52" value="58.6214" />
                              <Key frame="65" value="36.5606" />
                              <Key frame="77" value="24.6073" />
                              <Key frame="90" value="25.8378" />
                              <Key frame="102" value="37.5274" />
                              <Key frame="115" value="58.1819" />
                              <Key frame="127" value="56.1604" />
                              <Key frame="140" value="30.3202" />
                              <Key frame="152" value="17.9275" />
                              <Key frame="165" value="16.9607" />
                              <Key frame="177" value="29.9687" />
                              <Key frame="190" value="52.5568" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-28.743" />
                              <Key frame="27" value="-29.0946" />
                              <Key frame="40" value="-24.3484" />
                              <Key frame="52" value="-24.9637" />
                              <Key frame="65" value="-27.8641" />
                              <Key frame="77" value="-29.3582" />
                              <Key frame="90" value="-29.8856" />
                              <Key frame="102" value="-29.7098" />
                              <Key frame="115" value="-28.743" />
                              <Key frame="127" value="-30.5008" />
                              <Key frame="140" value="-31.8192" />
                              <Key frame="152" value="-33.7528" />
                              <Key frame="165" value="-34.5439" />
                              <Key frame="177" value="-34.1044" />
                              <Key frame="190" value="-32.9618" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="2" />
                              <Key frame="27" value="17.7565" />
                              <Key frame="40" value="6.06693" />
                              <Key frame="52" value="2" />
                              <Key frame="65" value="5.10013" />
                              <Key frame="77" value="4.13332" />
                              <Key frame="90" value="4.74855" />
                              <Key frame="102" value="3.25439" />
                              <Key frame="115" value="2" />
                              <Key frame="127" value="2" />
                              <Key frame="140" value="2.99072" />
                              <Key frame="152" value="3.69386" />
                              <Key frame="165" value="3.95753" />
                              <Key frame="177" value="5.18802" />
                              <Key frame="190" value="2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="65.4769" />
                              <Key frame="27" value="77.5181" />
                              <Key frame="40" value="77.3423" />
                              <Key frame="52" value="77.1665" />
                              <Key frame="65" value="76.9908" />
                              <Key frame="77" value="73.9145" />
                              <Key frame="90" value="70.9262" />
                              <Key frame="102" value="66.6195" />
                              <Key frame="115" value="65.4769" />
                              <Key frame="127" value="66.0043" />
                              <Key frame="140" value="68.1137" />
                              <Key frame="152" value="68.2016" />
                              <Key frame="165" value="67.6742" />
                              <Key frame="177" value="63.6312" />
                              <Key frame="190" value="58.8851" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.2468" />
                              <Key frame="27" value="0.2464" />
                              <Key frame="40" value="0.2464" />
                              <Key frame="52" value="0.2464" />
                              <Key frame="65" value="0.2464" />
                              <Key frame="77" value="0.2468" />
                              <Key frame="90" value="0.2468" />
                              <Key frame="102" value="0.2464" />
                              <Key frame="115" value="0.2468" />
                              <Key frame="127" value="0.2468" />
                              <Key frame="140" value="0.2468" />
                              <Key frame="152" value="0.2464" />
                              <Key frame="165" value="0.2464" />
                              <Key frame="177" value="0.2464" />
                              <Key frame="190" value="0.2464" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="59.2414" />
                              <Key frame="27" value="92.904" />
                              <Key frame="40" value="96.3317" />
                              <Key frame="52" value="106.615" />
                              <Key frame="65" value="102.308" />
                              <Key frame="77" value="66.5365" />
                              <Key frame="90" value="52.2101" />
                              <Key frame="102" value="50.1886" />
                              <Key frame="115" value="59.2414" />
                              <Key frame="127" value="86.8394" />
                              <Key frame="140" value="97.2986" />
                              <Key frame="152" value="68.0306" />
                              <Key frame="165" value="44.9151" />
                              <Key frame="177" value="39.6416" />
                              <Key frame="190" value="48.9581" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-74.6225" />
                              <Key frame="27" value="-76" />
                              <Key frame="40" value="-75.6772" />
                              <Key frame="52" value="-60.5598" />
                              <Key frame="65" value="-39.5537" />
                              <Key frame="77" value="-31.7313" />
                              <Key frame="90" value="-49.7491" />
                              <Key frame="102" value="-72.1615" />
                              <Key frame="115" value="-74.6225" />
                              <Key frame="127" value="-60.1203" />
                              <Key frame="140" value="-34.1044" />
                              <Key frame="152" value="-22.5906" />
                              <Key frame="165" value="-36.4775" />
                              <Key frame="177" value="-62.5813" />
                              <Key frame="190" value="-72.4252" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-30.3251" />
                              <Key frame="27" value="-27.3367" />
                              <Key frame="40" value="-29.1825" />
                              <Key frame="52" value="-29.0067" />
                              <Key frame="65" value="-29.0946" />
                              <Key frame="77" value="-29.0946" />
                              <Key frame="90" value="-30.4129" />
                              <Key frame="102" value="-30.5887" />
                              <Key frame="115" value="-30.3251" />
                              <Key frame="127" value="-27.4246" />
                              <Key frame="140" value="-27.1609" />
                              <Key frame="152" value="-27.2488" />
                              <Key frame="165" value="-27.6883" />
                              <Key frame="177" value="-29.1825" />
                              <Key frame="190" value="-29.7977" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (2)" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1105" y="453">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="190">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-7.3805" />
                              <Key frame="27" value="-26.3651" />
                              <Key frame="40" value="-21.0916" />
                              <Key frame="52" value="-9.92936" />
                              <Key frame="65" value="-8.17153" />
                              <Key frame="77" value="-10.7204" />
                              <Key frame="90" value="-7.73207" />
                              <Key frame="102" value="-7.64417" />
                              <Key frame="115" value="-7.3805" />
                              <Key frame="127" value="-4.48007" />
                              <Key frame="140" value="-5.62267" />
                              <Key frame="152" value="-8.87466" />
                              <Key frame="165" value="-4.65585" />
                              <Key frame="177" value="-3.86484" />
                              <Key frame="190" value="-2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-45.0909" />
                              <Key frame="27" value="-57.5715" />
                              <Key frame="40" value="-53.2648" />
                              <Key frame="52" value="-51.1554" />
                              <Key frame="65" value="-58.6262" />
                              <Key frame="77" value="-61.2629" />
                              <Key frame="90" value="-60.9114" />
                              <Key frame="102" value="-55.9894" />
                              <Key frame="115" value="-45.0909" />
                              <Key frame="127" value="-46.6729" />
                              <Key frame="140" value="-60.9993" />
                              <Key frame="152" value="-62.5813" />
                              <Key frame="165" value="-62.6692" />
                              <Key frame="177" value="-57.9231" />
                              <Key frame="190" value="-38.0595" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.316" />
                              <Key frame="27" value="0.316" />
                              <Key frame="40" value="0.316" />
                              <Key frame="52" value="0.316" />
                              <Key frame="65" value="0.316" />
                              <Key frame="77" value="0.316" />
                              <Key frame="90" value="0.316" />
                              <Key frame="102" value="0.316" />
                              <Key frame="115" value="0.316" />
                              <Key frame="127" value="0.316" />
                              <Key frame="140" value="0.316" />
                              <Key frame="152" value="0.316" />
                              <Key frame="165" value="0.316" />
                              <Key frame="177" value="0.316" />
                              <Key frame="190" value="0.316" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="33.6601" />
                              <Key frame="27" value="41.8341" />
                              <Key frame="40" value="47.0197" />
                              <Key frame="52" value="64.8617" />
                              <Key frame="65" value="72.6841" />
                              <Key frame="77" value="58.094" />
                              <Key frame="90" value="29.1777" />
                              <Key frame="102" value="19.3338" />
                              <Key frame="115" value="33.6601" />
                              <Key frame="127" value="61.6097" />
                              <Key frame="140" value="79.9791" />
                              <Key frame="152" value="60.9066" />
                              <Key frame="165" value="29.3534" />
                              <Key frame="177" value="14.2361" />
                              <Key frame="190" value="23.2889" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="58.1819" />
                              <Key frame="27" value="58.9729" />
                              <Key frame="40" value="67.7621" />
                              <Key frame="52" value="58.6214" />
                              <Key frame="65" value="36.5606" />
                              <Key frame="77" value="24.6073" />
                              <Key frame="90" value="25.8378" />
                              <Key frame="102" value="37.5274" />
                              <Key frame="115" value="58.1819" />
                              <Key frame="127" value="56.1604" />
                              <Key frame="140" value="30.3202" />
                              <Key frame="152" value="17.9275" />
                              <Key frame="165" value="16.9607" />
                              <Key frame="177" value="29.9687" />
                              <Key frame="190" value="52.5568" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-28.743" />
                              <Key frame="27" value="-29.0946" />
                              <Key frame="40" value="-24.3484" />
                              <Key frame="52" value="-24.9637" />
                              <Key frame="65" value="-27.8641" />
                              <Key frame="77" value="-29.3582" />
                              <Key frame="90" value="-29.8856" />
                              <Key frame="102" value="-29.7098" />
                              <Key frame="115" value="-28.743" />
                              <Key frame="127" value="-30.5008" />
                              <Key frame="140" value="-31.8192" />
                              <Key frame="152" value="-33.7528" />
                              <Key frame="165" value="-34.5439" />
                              <Key frame="177" value="-34.1044" />
                              <Key frame="190" value="-32.9618" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="2" />
                              <Key frame="27" value="17.7565" />
                              <Key frame="40" value="6.06693" />
                              <Key frame="52" value="2" />
                              <Key frame="65" value="5.10013" />
                              <Key frame="77" value="4.13332" />
                              <Key frame="90" value="4.74855" />
                              <Key frame="102" value="3.25439" />
                              <Key frame="115" value="2" />
                              <Key frame="127" value="2" />
                              <Key frame="140" value="2.99072" />
                              <Key frame="152" value="3.69386" />
                              <Key frame="165" value="3.95753" />
                              <Key frame="177" value="5.18802" />
                              <Key frame="190" value="2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="65.4769" />
                              <Key frame="27" value="77.5181" />
                              <Key frame="40" value="77.3423" />
                              <Key frame="52" value="77.1665" />
                              <Key frame="65" value="76.9908" />
                              <Key frame="77" value="73.9145" />
                              <Key frame="90" value="70.9262" />
                              <Key frame="102" value="66.6195" />
                              <Key frame="115" value="65.4769" />
                              <Key frame="127" value="66.0043" />
                              <Key frame="140" value="68.1137" />
                              <Key frame="152" value="68.2016" />
                              <Key frame="165" value="67.6742" />
                              <Key frame="177" value="63.6312" />
                              <Key frame="190" value="58.8851" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.2468" />
                              <Key frame="27" value="0.2464" />
                              <Key frame="40" value="0.2464" />
                              <Key frame="52" value="0.2464" />
                              <Key frame="65" value="0.2464" />
                              <Key frame="77" value="0.2468" />
                              <Key frame="90" value="0.2468" />
                              <Key frame="102" value="0.2464" />
                              <Key frame="115" value="0.2468" />
                              <Key frame="127" value="0.2468" />
                              <Key frame="140" value="0.2468" />
                              <Key frame="152" value="0.2464" />
                              <Key frame="165" value="0.2464" />
                              <Key frame="177" value="0.2464" />
                              <Key frame="190" value="0.2464" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="59.2414" />
                              <Key frame="27" value="92.904" />
                              <Key frame="40" value="96.3317" />
                              <Key frame="52" value="106.615" />
                              <Key frame="65" value="102.308" />
                              <Key frame="77" value="66.5365" />
                              <Key frame="90" value="52.2101" />
                              <Key frame="102" value="50.1886" />
                              <Key frame="115" value="59.2414" />
                              <Key frame="127" value="86.8394" />
                              <Key frame="140" value="97.2986" />
                              <Key frame="152" value="68.0306" />
                              <Key frame="165" value="44.9151" />
                              <Key frame="177" value="39.6416" />
                              <Key frame="190" value="48.9581" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-74.6225" />
                              <Key frame="27" value="-76" />
                              <Key frame="40" value="-75.6772" />
                              <Key frame="52" value="-60.5598" />
                              <Key frame="65" value="-39.5537" />
                              <Key frame="77" value="-31.7313" />
                              <Key frame="90" value="-49.7491" />
                              <Key frame="102" value="-72.1615" />
                              <Key frame="115" value="-74.6225" />
                              <Key frame="127" value="-60.1203" />
                              <Key frame="140" value="-34.1044" />
                              <Key frame="152" value="-22.5906" />
                              <Key frame="165" value="-36.4775" />
                              <Key frame="177" value="-62.5813" />
                              <Key frame="190" value="-72.4252" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-30.3251" />
                              <Key frame="27" value="-27.3367" />
                              <Key frame="40" value="-29.1825" />
                              <Key frame="52" value="-29.0067" />
                              <Key frame="65" value="-29.0946" />
                              <Key frame="77" value="-29.0946" />
                              <Key frame="90" value="-30.4129" />
                              <Key frame="102" value="-30.5887" />
                              <Key frame="115" value="-30.3251" />
                              <Key frame="127" value="-27.4246" />
                              <Key frame="140" value="-27.1609" />
                              <Key frame="152" value="-27.2488" />
                              <Key frame="165" value="-27.6883" />
                              <Key frame="177" value="-29.1825" />
                              <Key frame="190" value="-29.7977" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (3)" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1268" y="459">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="190">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-7.3805" />
                              <Key frame="27" value="-26.3651" />
                              <Key frame="40" value="-21.0916" />
                              <Key frame="52" value="-9.92936" />
                              <Key frame="65" value="-8.17153" />
                              <Key frame="77" value="-10.7204" />
                              <Key frame="90" value="-7.73207" />
                              <Key frame="102" value="-7.64417" />
                              <Key frame="115" value="-7.3805" />
                              <Key frame="127" value="-4.48007" />
                              <Key frame="140" value="-5.62267" />
                              <Key frame="152" value="-8.87466" />
                              <Key frame="165" value="-4.65585" />
                              <Key frame="177" value="-3.86484" />
                              <Key frame="190" value="-2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-45.0909" />
                              <Key frame="27" value="-57.5715" />
                              <Key frame="40" value="-53.2648" />
                              <Key frame="52" value="-51.1554" />
                              <Key frame="65" value="-58.6262" />
                              <Key frame="77" value="-61.2629" />
                              <Key frame="90" value="-60.9114" />
                              <Key frame="102" value="-55.9894" />
                              <Key frame="115" value="-45.0909" />
                              <Key frame="127" value="-46.6729" />
                              <Key frame="140" value="-60.9993" />
                              <Key frame="152" value="-62.5813" />
                              <Key frame="165" value="-62.6692" />
                              <Key frame="177" value="-57.9231" />
                              <Key frame="190" value="-38.0595" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.316" />
                              <Key frame="27" value="0.316" />
                              <Key frame="40" value="0.316" />
                              <Key frame="52" value="0.316" />
                              <Key frame="65" value="0.316" />
                              <Key frame="77" value="0.316" />
                              <Key frame="90" value="0.316" />
                              <Key frame="102" value="0.316" />
                              <Key frame="115" value="0.316" />
                              <Key frame="127" value="0.316" />
                              <Key frame="140" value="0.316" />
                              <Key frame="152" value="0.316" />
                              <Key frame="165" value="0.316" />
                              <Key frame="177" value="0.316" />
                              <Key frame="190" value="0.316" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="33.6601" />
                              <Key frame="27" value="41.8341" />
                              <Key frame="40" value="47.0197" />
                              <Key frame="52" value="64.8617" />
                              <Key frame="65" value="72.6841" />
                              <Key frame="77" value="58.094" />
                              <Key frame="90" value="29.1777" />
                              <Key frame="102" value="19.3338" />
                              <Key frame="115" value="33.6601" />
                              <Key frame="127" value="61.6097" />
                              <Key frame="140" value="79.9791" />
                              <Key frame="152" value="60.9066" />
                              <Key frame="165" value="29.3534" />
                              <Key frame="177" value="14.2361" />
                              <Key frame="190" value="23.2889" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="58.1819" />
                              <Key frame="27" value="58.9729" />
                              <Key frame="40" value="67.7621" />
                              <Key frame="52" value="58.6214" />
                              <Key frame="65" value="36.5606" />
                              <Key frame="77" value="24.6073" />
                              <Key frame="90" value="25.8378" />
                              <Key frame="102" value="37.5274" />
                              <Key frame="115" value="58.1819" />
                              <Key frame="127" value="56.1604" />
                              <Key frame="140" value="30.3202" />
                              <Key frame="152" value="17.9275" />
                              <Key frame="165" value="16.9607" />
                              <Key frame="177" value="29.9687" />
                              <Key frame="190" value="52.5568" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-28.743" />
                              <Key frame="27" value="-29.0946" />
                              <Key frame="40" value="-24.3484" />
                              <Key frame="52" value="-24.9637" />
                              <Key frame="65" value="-27.8641" />
                              <Key frame="77" value="-29.3582" />
                              <Key frame="90" value="-29.8856" />
                              <Key frame="102" value="-29.7098" />
                              <Key frame="115" value="-28.743" />
                              <Key frame="127" value="-30.5008" />
                              <Key frame="140" value="-31.8192" />
                              <Key frame="152" value="-33.7528" />
                              <Key frame="165" value="-34.5439" />
                              <Key frame="177" value="-34.1044" />
                              <Key frame="190" value="-32.9618" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="2" />
                              <Key frame="27" value="17.7565" />
                              <Key frame="40" value="6.06693" />
                              <Key frame="52" value="2" />
                              <Key frame="65" value="5.10013" />
                              <Key frame="77" value="4.13332" />
                              <Key frame="90" value="4.74855" />
                              <Key frame="102" value="3.25439" />
                              <Key frame="115" value="2" />
                              <Key frame="127" value="2" />
                              <Key frame="140" value="2.99072" />
                              <Key frame="152" value="3.69386" />
                              <Key frame="165" value="3.95753" />
                              <Key frame="177" value="5.18802" />
                              <Key frame="190" value="2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="65.4769" />
                              <Key frame="27" value="77.5181" />
                              <Key frame="40" value="77.3423" />
                              <Key frame="52" value="77.1665" />
                              <Key frame="65" value="76.9908" />
                              <Key frame="77" value="73.9145" />
                              <Key frame="90" value="70.9262" />
                              <Key frame="102" value="66.6195" />
                              <Key frame="115" value="65.4769" />
                              <Key frame="127" value="66.0043" />
                              <Key frame="140" value="68.1137" />
                              <Key frame="152" value="68.2016" />
                              <Key frame="165" value="67.6742" />
                              <Key frame="177" value="63.6312" />
                              <Key frame="190" value="58.8851" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.2468" />
                              <Key frame="27" value="0.2464" />
                              <Key frame="40" value="0.2464" />
                              <Key frame="52" value="0.2464" />
                              <Key frame="65" value="0.2464" />
                              <Key frame="77" value="0.2468" />
                              <Key frame="90" value="0.2468" />
                              <Key frame="102" value="0.2464" />
                              <Key frame="115" value="0.2468" />
                              <Key frame="127" value="0.2468" />
                              <Key frame="140" value="0.2468" />
                              <Key frame="152" value="0.2464" />
                              <Key frame="165" value="0.2464" />
                              <Key frame="177" value="0.2464" />
                              <Key frame="190" value="0.2464" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="59.2414" />
                              <Key frame="27" value="92.904" />
                              <Key frame="40" value="96.3317" />
                              <Key frame="52" value="106.615" />
                              <Key frame="65" value="102.308" />
                              <Key frame="77" value="66.5365" />
                              <Key frame="90" value="52.2101" />
                              <Key frame="102" value="50.1886" />
                              <Key frame="115" value="59.2414" />
                              <Key frame="127" value="86.8394" />
                              <Key frame="140" value="97.2986" />
                              <Key frame="152" value="68.0306" />
                              <Key frame="165" value="44.9151" />
                              <Key frame="177" value="39.6416" />
                              <Key frame="190" value="48.9581" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-74.6225" />
                              <Key frame="27" value="-76" />
                              <Key frame="40" value="-75.6772" />
                              <Key frame="52" value="-60.5598" />
                              <Key frame="65" value="-39.5537" />
                              <Key frame="77" value="-31.7313" />
                              <Key frame="90" value="-49.7491" />
                              <Key frame="102" value="-72.1615" />
                              <Key frame="115" value="-74.6225" />
                              <Key frame="127" value="-60.1203" />
                              <Key frame="140" value="-34.1044" />
                              <Key frame="152" value="-22.5906" />
                              <Key frame="165" value="-36.4775" />
                              <Key frame="177" value="-62.5813" />
                              <Key frame="190" value="-72.4252" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-30.3251" />
                              <Key frame="27" value="-27.3367" />
                              <Key frame="40" value="-29.1825" />
                              <Key frame="52" value="-29.0067" />
                              <Key frame="65" value="-29.0946" />
                              <Key frame="77" value="-29.0946" />
                              <Key frame="90" value="-30.4129" />
                              <Key frame="102" value="-30.5887" />
                              <Key frame="115" value="-30.3251" />
                              <Key frame="127" value="-27.4246" />
                              <Key frame="140" value="-27.1609" />
                              <Key frame="152" value="-27.2488" />
                              <Key frame="165" value="-27.6883" />
                              <Key frame="177" value="-29.1825" />
                              <Key frame="190" value="-29.7977" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (4)" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1423" y="455">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="190">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-7.3805" />
                              <Key frame="27" value="-26.3651" />
                              <Key frame="40" value="-21.0916" />
                              <Key frame="52" value="-9.92936" />
                              <Key frame="65" value="-8.17153" />
                              <Key frame="77" value="-10.7204" />
                              <Key frame="90" value="-7.73207" />
                              <Key frame="102" value="-7.64417" />
                              <Key frame="115" value="-7.3805" />
                              <Key frame="127" value="-4.48007" />
                              <Key frame="140" value="-5.62267" />
                              <Key frame="152" value="-8.87466" />
                              <Key frame="165" value="-4.65585" />
                              <Key frame="177" value="-3.86484" />
                              <Key frame="190" value="-2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-45.0909" />
                              <Key frame="27" value="-57.5715" />
                              <Key frame="40" value="-53.2648" />
                              <Key frame="52" value="-51.1554" />
                              <Key frame="65" value="-58.6262" />
                              <Key frame="77" value="-61.2629" />
                              <Key frame="90" value="-60.9114" />
                              <Key frame="102" value="-55.9894" />
                              <Key frame="115" value="-45.0909" />
                              <Key frame="127" value="-46.6729" />
                              <Key frame="140" value="-60.9993" />
                              <Key frame="152" value="-62.5813" />
                              <Key frame="165" value="-62.6692" />
                              <Key frame="177" value="-57.9231" />
                              <Key frame="190" value="-38.0595" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.316" />
                              <Key frame="27" value="0.316" />
                              <Key frame="40" value="0.316" />
                              <Key frame="52" value="0.316" />
                              <Key frame="65" value="0.316" />
                              <Key frame="77" value="0.316" />
                              <Key frame="90" value="0.316" />
                              <Key frame="102" value="0.316" />
                              <Key frame="115" value="0.316" />
                              <Key frame="127" value="0.316" />
                              <Key frame="140" value="0.316" />
                              <Key frame="152" value="0.316" />
                              <Key frame="165" value="0.316" />
                              <Key frame="177" value="0.316" />
                              <Key frame="190" value="0.316" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="33.6601" />
                              <Key frame="27" value="41.8341" />
                              <Key frame="40" value="47.0197" />
                              <Key frame="52" value="64.8617" />
                              <Key frame="65" value="72.6841" />
                              <Key frame="77" value="58.094" />
                              <Key frame="90" value="29.1777" />
                              <Key frame="102" value="19.3338" />
                              <Key frame="115" value="33.6601" />
                              <Key frame="127" value="61.6097" />
                              <Key frame="140" value="79.9791" />
                              <Key frame="152" value="60.9066" />
                              <Key frame="165" value="29.3534" />
                              <Key frame="177" value="14.2361" />
                              <Key frame="190" value="23.2889" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="58.1819" />
                              <Key frame="27" value="58.9729" />
                              <Key frame="40" value="67.7621" />
                              <Key frame="52" value="58.6214" />
                              <Key frame="65" value="36.5606" />
                              <Key frame="77" value="24.6073" />
                              <Key frame="90" value="25.8378" />
                              <Key frame="102" value="37.5274" />
                              <Key frame="115" value="58.1819" />
                              <Key frame="127" value="56.1604" />
                              <Key frame="140" value="30.3202" />
                              <Key frame="152" value="17.9275" />
                              <Key frame="165" value="16.9607" />
                              <Key frame="177" value="29.9687" />
                              <Key frame="190" value="52.5568" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-28.743" />
                              <Key frame="27" value="-29.0946" />
                              <Key frame="40" value="-24.3484" />
                              <Key frame="52" value="-24.9637" />
                              <Key frame="65" value="-27.8641" />
                              <Key frame="77" value="-29.3582" />
                              <Key frame="90" value="-29.8856" />
                              <Key frame="102" value="-29.7098" />
                              <Key frame="115" value="-28.743" />
                              <Key frame="127" value="-30.5008" />
                              <Key frame="140" value="-31.8192" />
                              <Key frame="152" value="-33.7528" />
                              <Key frame="165" value="-34.5439" />
                              <Key frame="177" value="-34.1044" />
                              <Key frame="190" value="-32.9618" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="2" />
                              <Key frame="27" value="17.7565" />
                              <Key frame="40" value="6.06693" />
                              <Key frame="52" value="2" />
                              <Key frame="65" value="5.10013" />
                              <Key frame="77" value="4.13332" />
                              <Key frame="90" value="4.74855" />
                              <Key frame="102" value="3.25439" />
                              <Key frame="115" value="2" />
                              <Key frame="127" value="2" />
                              <Key frame="140" value="2.99072" />
                              <Key frame="152" value="3.69386" />
                              <Key frame="165" value="3.95753" />
                              <Key frame="177" value="5.18802" />
                              <Key frame="190" value="2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="65.4769" />
                              <Key frame="27" value="77.5181" />
                              <Key frame="40" value="77.3423" />
                              <Key frame="52" value="77.1665" />
                              <Key frame="65" value="76.9908" />
                              <Key frame="77" value="73.9145" />
                              <Key frame="90" value="70.9262" />
                              <Key frame="102" value="66.6195" />
                              <Key frame="115" value="65.4769" />
                              <Key frame="127" value="66.0043" />
                              <Key frame="140" value="68.1137" />
                              <Key frame="152" value="68.2016" />
                              <Key frame="165" value="67.6742" />
                              <Key frame="177" value="63.6312" />
                              <Key frame="190" value="58.8851" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.2468" />
                              <Key frame="27" value="0.2464" />
                              <Key frame="40" value="0.2464" />
                              <Key frame="52" value="0.2464" />
                              <Key frame="65" value="0.2464" />
                              <Key frame="77" value="0.2468" />
                              <Key frame="90" value="0.2468" />
                              <Key frame="102" value="0.2464" />
                              <Key frame="115" value="0.2468" />
                              <Key frame="127" value="0.2468" />
                              <Key frame="140" value="0.2468" />
                              <Key frame="152" value="0.2464" />
                              <Key frame="165" value="0.2464" />
                              <Key frame="177" value="0.2464" />
                              <Key frame="190" value="0.2464" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="59.2414" />
                              <Key frame="27" value="92.904" />
                              <Key frame="40" value="96.3317" />
                              <Key frame="52" value="106.615" />
                              <Key frame="65" value="102.308" />
                              <Key frame="77" value="66.5365" />
                              <Key frame="90" value="52.2101" />
                              <Key frame="102" value="50.1886" />
                              <Key frame="115" value="59.2414" />
                              <Key frame="127" value="86.8394" />
                              <Key frame="140" value="97.2986" />
                              <Key frame="152" value="68.0306" />
                              <Key frame="165" value="44.9151" />
                              <Key frame="177" value="39.6416" />
                              <Key frame="190" value="48.9581" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-74.6225" />
                              <Key frame="27" value="-76" />
                              <Key frame="40" value="-75.6772" />
                              <Key frame="52" value="-60.5598" />
                              <Key frame="65" value="-39.5537" />
                              <Key frame="77" value="-31.7313" />
                              <Key frame="90" value="-49.7491" />
                              <Key frame="102" value="-72.1615" />
                              <Key frame="115" value="-74.6225" />
                              <Key frame="127" value="-60.1203" />
                              <Key frame="140" value="-34.1044" />
                              <Key frame="152" value="-22.5906" />
                              <Key frame="165" value="-36.4775" />
                              <Key frame="177" value="-62.5813" />
                              <Key frame="190" value="-72.4252" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-30.3251" />
                              <Key frame="27" value="-27.3367" />
                              <Key frame="40" value="-29.1825" />
                              <Key frame="52" value="-29.0067" />
                              <Key frame="65" value="-29.0946" />
                              <Key frame="77" value="-29.0946" />
                              <Key frame="90" value="-30.4129" />
                              <Key frame="102" value="-30.5887" />
                              <Key frame="115" value="-30.3251" />
                              <Key frame="127" value="-27.4246" />
                              <Key frame="140" value="-27.1609" />
                              <Key frame="152" value="-27.2488" />
                              <Key frame="165" value="-27.6883" />
                              <Key frame="177" value="-29.1825" />
                              <Key frame="190" value="-29.7977" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Timeline (5)" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1558" y="455">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="190">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="-7.3805" />
                              <Key frame="27" value="-26.3651" />
                              <Key frame="40" value="-21.0916" />
                              <Key frame="52" value="-9.92936" />
                              <Key frame="65" value="-8.17153" />
                              <Key frame="77" value="-10.7204" />
                              <Key frame="90" value="-7.73207" />
                              <Key frame="102" value="-7.64417" />
                              <Key frame="115" value="-7.3805" />
                              <Key frame="127" value="-4.48007" />
                              <Key frame="140" value="-5.62267" />
                              <Key frame="152" value="-8.87466" />
                              <Key frame="165" value="-4.65585" />
                              <Key frame="177" value="-3.86484" />
                              <Key frame="190" value="-2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="-45.0909" />
                              <Key frame="27" value="-57.5715" />
                              <Key frame="40" value="-53.2648" />
                              <Key frame="52" value="-51.1554" />
                              <Key frame="65" value="-58.6262" />
                              <Key frame="77" value="-61.2629" />
                              <Key frame="90" value="-60.9114" />
                              <Key frame="102" value="-55.9894" />
                              <Key frame="115" value="-45.0909" />
                              <Key frame="127" value="-46.6729" />
                              <Key frame="140" value="-60.9993" />
                              <Key frame="152" value="-62.5813" />
                              <Key frame="165" value="-62.6692" />
                              <Key frame="177" value="-57.9231" />
                              <Key frame="190" value="-38.0595" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="1" value="0.316" />
                              <Key frame="27" value="0.316" />
                              <Key frame="40" value="0.316" />
                              <Key frame="52" value="0.316" />
                              <Key frame="65" value="0.316" />
                              <Key frame="77" value="0.316" />
                              <Key frame="90" value="0.316" />
                              <Key frame="102" value="0.316" />
                              <Key frame="115" value="0.316" />
                              <Key frame="127" value="0.316" />
                              <Key frame="140" value="0.316" />
                              <Key frame="152" value="0.316" />
                              <Key frame="165" value="0.316" />
                              <Key frame="177" value="0.316" />
                              <Key frame="190" value="0.316" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="33.6601" />
                              <Key frame="27" value="41.8341" />
                              <Key frame="40" value="47.0197" />
                              <Key frame="52" value="64.8617" />
                              <Key frame="65" value="72.6841" />
                              <Key frame="77" value="58.094" />
                              <Key frame="90" value="29.1777" />
                              <Key frame="102" value="19.3338" />
                              <Key frame="115" value="33.6601" />
                              <Key frame="127" value="61.6097" />
                              <Key frame="140" value="79.9791" />
                              <Key frame="152" value="60.9066" />
                              <Key frame="165" value="29.3534" />
                              <Key frame="177" value="14.2361" />
                              <Key frame="190" value="23.2889" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="58.1819" />
                              <Key frame="27" value="58.9729" />
                              <Key frame="40" value="67.7621" />
                              <Key frame="52" value="58.6214" />
                              <Key frame="65" value="36.5606" />
                              <Key frame="77" value="24.6073" />
                              <Key frame="90" value="25.8378" />
                              <Key frame="102" value="37.5274" />
                              <Key frame="115" value="58.1819" />
                              <Key frame="127" value="56.1604" />
                              <Key frame="140" value="30.3202" />
                              <Key frame="152" value="17.9275" />
                              <Key frame="165" value="16.9607" />
                              <Key frame="177" value="29.9687" />
                              <Key frame="190" value="52.5568" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-28.743" />
                              <Key frame="27" value="-29.0946" />
                              <Key frame="40" value="-24.3484" />
                              <Key frame="52" value="-24.9637" />
                              <Key frame="65" value="-27.8641" />
                              <Key frame="77" value="-29.3582" />
                              <Key frame="90" value="-29.8856" />
                              <Key frame="102" value="-29.7098" />
                              <Key frame="115" value="-28.743" />
                              <Key frame="127" value="-30.5008" />
                              <Key frame="140" value="-31.8192" />
                              <Key frame="152" value="-33.7528" />
                              <Key frame="165" value="-34.5439" />
                              <Key frame="177" value="-34.1044" />
                              <Key frame="190" value="-32.9618" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="1" value="2" />
                              <Key frame="27" value="17.7565" />
                              <Key frame="40" value="6.06693" />
                              <Key frame="52" value="2" />
                              <Key frame="65" value="5.10013" />
                              <Key frame="77" value="4.13332" />
                              <Key frame="90" value="4.74855" />
                              <Key frame="102" value="3.25439" />
                              <Key frame="115" value="2" />
                              <Key frame="127" value="2" />
                              <Key frame="140" value="2.99072" />
                              <Key frame="152" value="3.69386" />
                              <Key frame="165" value="3.95753" />
                              <Key frame="177" value="5.18802" />
                              <Key frame="190" value="2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="1" value="65.4769" />
                              <Key frame="27" value="77.5181" />
                              <Key frame="40" value="77.3423" />
                              <Key frame="52" value="77.1665" />
                              <Key frame="65" value="76.9908" />
                              <Key frame="77" value="73.9145" />
                              <Key frame="90" value="70.9262" />
                              <Key frame="102" value="66.6195" />
                              <Key frame="115" value="65.4769" />
                              <Key frame="127" value="66.0043" />
                              <Key frame="140" value="68.1137" />
                              <Key frame="152" value="68.2016" />
                              <Key frame="165" value="67.6742" />
                              <Key frame="177" value="63.6312" />
                              <Key frame="190" value="58.8851" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="1" value="0.2468" />
                              <Key frame="27" value="0.2464" />
                              <Key frame="40" value="0.2464" />
                              <Key frame="52" value="0.2464" />
                              <Key frame="65" value="0.2464" />
                              <Key frame="77" value="0.2468" />
                              <Key frame="90" value="0.2468" />
                              <Key frame="102" value="0.2464" />
                              <Key frame="115" value="0.2468" />
                              <Key frame="127" value="0.2468" />
                              <Key frame="140" value="0.2468" />
                              <Key frame="152" value="0.2464" />
                              <Key frame="165" value="0.2464" />
                              <Key frame="177" value="0.2464" />
                              <Key frame="190" value="0.2464" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="1" value="59.2414" />
                              <Key frame="27" value="92.904" />
                              <Key frame="40" value="96.3317" />
                              <Key frame="52" value="106.615" />
                              <Key frame="65" value="102.308" />
                              <Key frame="77" value="66.5365" />
                              <Key frame="90" value="52.2101" />
                              <Key frame="102" value="50.1886" />
                              <Key frame="115" value="59.2414" />
                              <Key frame="127" value="86.8394" />
                              <Key frame="140" value="97.2986" />
                              <Key frame="152" value="68.0306" />
                              <Key frame="165" value="44.9151" />
                              <Key frame="177" value="39.6416" />
                              <Key frame="190" value="48.9581" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="1" value="-74.6225" />
                              <Key frame="27" value="-76" />
                              <Key frame="40" value="-75.6772" />
                              <Key frame="52" value="-60.5598" />
                              <Key frame="65" value="-39.5537" />
                              <Key frame="77" value="-31.7313" />
                              <Key frame="90" value="-49.7491" />
                              <Key frame="102" value="-72.1615" />
                              <Key frame="115" value="-74.6225" />
                              <Key frame="127" value="-60.1203" />
                              <Key frame="140" value="-34.1044" />
                              <Key frame="152" value="-22.5906" />
                              <Key frame="165" value="-36.4775" />
                              <Key frame="177" value="-62.5813" />
                              <Key frame="190" value="-72.4252" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="1" value="-30.3251" />
                              <Key frame="27" value="-27.3367" />
                              <Key frame="40" value="-29.1825" />
                              <Key frame="52" value="-29.0067" />
                              <Key frame="65" value="-29.0946" />
                              <Key frame="77" value="-29.0946" />
                              <Key frame="90" value="-30.4129" />
                              <Key frame="102" value="-30.5887" />
                              <Key frame="115" value="-30.3251" />
                              <Key frame="127" value="-27.4246" />
                              <Key frame="140" value="-27.1609" />
                              <Key frame="152" value="-27.2488" />
                              <Key frame="165" value="-27.6883" />
                              <Key frame="177" value="-29.1825" />
                              <Key frame="190" value="-29.7977" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Text Edit" id="6" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="205" y="150">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("The first pose is arm tweist")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[The first pose is arm tweist]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text" id="20" localization="8" tooltip="Say the text received on its input." x="510" y="214">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="78" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="81" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Text Edit (1)" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="675" y="144">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Follow me.\nReady. Steady. Go!")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Follow me.
Ready. Steady. Go!]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text (1)" id="3" localization="8" tooltip="Say the text received on its input." x="962" y="130">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="11" indexofinput="2" outputowner="52" indexofoutput="4" />
                      <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="4" />
                      <Link inputowner="13" indexofinput="2" outputowner="12" indexofoutput="4" />
                      <Link inputowner="14" indexofinput="2" outputowner="13" indexofoutput="4" />
                      <Link inputowner="20" indexofinput="2" outputowner="6" indexofoutput="3" />
                      <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                      <Link inputowner="2" indexofinput="2" outputowner="20" indexofoutput="4" />
                      <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="52" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="3" outputowner="14" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Front raise" id="9" localization="8" tooltip="在此输入说明" x="883" y="246">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="Text Edit_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
              <Output name="SayText6_onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Text Edit (3)" id="9" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="632" y="762">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("The thrid pose is front raise")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[The thrid pose is front raise]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text (3)" id="10" localization="8" tooltip="Say the text received on its input." x="937" y="826">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="78" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="81" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Text Edit (4)" id="11" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="1102" y="756">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Follow me.\nReady. Steady. Go!")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Follow me.
Ready. Steady. Go!]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text (4)" id="12" localization="8" tooltip="Say the text received on its input." x="1389" y="742">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="set of 5 (2)" id="13" localization="8" tooltip="perform 5 repetitions of the front raise and say the number of repetitions done in the set" x="1655" y="521">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="Counter_onNext" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                        <Output name="Counter_onReinitialized" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Counter" id="2" localization="-1" tooltip="Represent a counter.&#x0A;&#x0A;Each time the onStart input is stimulated, the counter value is sent on the&#x0A;currentValue output and incremented (or decremented) by Step value, from&#x0A;its Initial value to its Final value set in the parameters. Once the counter value is&#x0A;higher than its Final value, the onReinitialized output is stimulated and&#x0A;the counter is reinitialized to the Initial value.&#x0A;&#x0A;Note: You can also reinitialize the counter by stimulating the onInit&#x0A;input." x="822" y="156">
                                  <bitmap>media/images/box/loop.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.initializeParameters()
        if( self.getParameter("Final value") - self.getParameter("Initial value") >= 0 ):
            self.stepSign = +1
        else:
            self.stepSign = -1

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onNext(self):
        bParamChanged = ( self.nLast != self.getParameter("Final value") or self.nFirst != self.getParameter("Initial value") )
        bEnd = ( self.stepSign * self.nCounter > self.stepSign * self.nLast )
        if( bEnd or bParamChanged ):
            self.onInput_onInit()
        if( not bEnd or bParamChanged ):
            currentCounter = self.nCounter
            self.nCounter = self.nCounter + self.stepSign * self.getParameter("Step value")
            self.currentValue( currentCounter )

    def initializeParameters(self):
        self.nFirst = self.getParameter("Initial value")
        self.nCounter = self.nFirst
        self.nLast = self.getParameter("Final value")

    def onInput_onInit(self):
        self.initializeParameters()
        self.onReinitialized()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onInit" type="1" type_size="1" nature="1" inner="0" tooltip="When a signal is received on this input, the counter is reinitialized to its Initial&#x0A;value." id="2" />
                                  <Input name="onNext" type="1" type_size="1" nature="1" inner="0" tooltip="The counter next value is sent on the currentValue output when a signal is&#x0A;received on this input, unless it reached its Final value, then the onReinitialized&#x0A;output is stimulated." id="3" />
                                  <Output name="currentValue" type="2" type_size="1" nature="2" inner="0" tooltip="Stimulated for each interaction with the counter current value." id="4" />
                                  <Output name="onReinitialized" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated when the loop is over or if the counter has been reinitialized." id="5" />
                                  <Parameter name="Initial value" inherits_from_parent="0" content_type="1" value="1" default_value="0" min="0" max="500" tooltip="The initial value of the counter (for the first iteration)." id="6" />
                                  <Parameter name="Step value" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="1" max="500" tooltip="The counter value will be incremented or decremented with this value." id="7" />
                                  <Parameter name="Final value" inherits_from_parent="0" content_type="1" value="5" default_value="5" min="0" max="500" tooltip="It is the maximum (if increasing) or the minimum (if decreasing) value of the&#x0A;counter (thus for the last iteration).&#x0A;&#x0A;After this value, if the onStart input is called, the onReinitialized output will be&#x0A;stimulated and the counter will be reinitialized to its Initial value." id="8" />
                                </Box>
                                <Box name="front raise" id="1" localization="8" tooltip="Enter description here" x="1003" y="412">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="Apply Posture (1)_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                                  <Output name="ApplyPosture_success" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Apply Posture" id="3" localization="8" tooltip="Set directly all the joints of the robot in the asked posture." x="683" y="474">
                                            <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.applyPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="StandZero" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="21" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                          </Box>
                                          <Box name="Apply Posture (1)" id="6" localization="8" tooltip="Set directly all the joints of the robot in the asked posture." x="562" y="478">
                                            <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.applyPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="21" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" />
                                          <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="3" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Say Text (1)" id="3" localization="8" tooltip="Say the text received on its input." x="990" y="161">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="3" outputowner="1" indexofoutput="3" />
                                <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="3" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="2" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Text Edit" id="6" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="538" y="476">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("The fourth pose is front raise")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[The fourth pose is front raise]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text" id="20" localization="8" tooltip="Say the text received on its input." x="843" y="540">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="78" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="81" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Text Edit (1)" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="1008" y="470">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Follow me.\nReady. Steady. Go!")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Follow me.
Ready. Steady. Go!]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text (1)" id="3" localization="8" tooltip="Say the text received on its input." x="1295" y="456">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="3" />
                      <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="3" />
                      <Link inputowner="11" indexofinput="2" outputowner="10" indexofoutput="4" />
                      <Link inputowner="13" indexofinput="2" outputowner="12" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="3" outputowner="13" indexofoutput="3" />
                      <Link inputowner="20" indexofinput="2" outputowner="6" indexofoutput="3" />
                      <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                      <Link inputowner="2" indexofinput="2" outputowner="20" indexofoutput="4" />
                      <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Set Speaker Vol." id="1" localization="8" tooltip="Set the sound volume between 0 (mute) and 100 (max).&#x0A;&#x0A;V1.1.0&#x0A;" x="193" y="99">
              <bitmap>media/images/box/interaction/processing_sound.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onSet(self):
        try:
            self.audiodevice = self.session().service("ALAudioDevice")
            self.audiodevice.setOutputVolume(self.getParameter("Volume (%)"))
        except Exception as e:
            self.logger.error(e)

        self.onReady() # activate output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" />
              <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" />
              <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="70" default_value="50" min="0" max="100" tooltip="Percentage of maximum output volume." id="4" />
            </Box>
            <Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="3" />
            <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="3" />
            <Link inputowner="7" indexofinput="2" outputowner="4" indexofoutput="3" />
            <Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="3" />
            <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="3" />
            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="3" />
            <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="3" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
